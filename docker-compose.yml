version: '3'
services:
  # Use admin:password to log in
  api-lb:
    image: haproxy
    container_name: api-lb
    volumes:
      - ./config/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    ports:
      - 9000:9000
      - 8080:8080
    depends_on:
      - api-a
      - api-b

  driver:
    build:
      context: .
      dockerfile: docker/Dockerfile.driver
    container_name: driver

  heavylifter:
    build:
      context: .
      dockerfile: docker/Dockerfile.heavylifter
    container_name: heavylifter

  api-a:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    container_name: api-a
    ports:
      - 9001:9000
    depends_on:
      - postgres

  api-b:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    container_name: api-b
    ports:
      - 9002:9000
    depends_on:
      - postgres

  postgres:
    image: postgres:14.2
    hostname: postgres
    container_name: postgres
    command: postgres -c config_file=/etc/postgresql.conf
    volumes:
    - pgdata:/var/lib/postgresql/data
    - ./config/postgresql.conf:/etc/postgresql.conf
    ports:
    - 5432:5432
    environment:
    - TZ=Europe/London
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=insecure

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./config/prometheus.yml:/prometheus/prometheus.yml
    command:
      - '--log.level=error'
    ports:
      - 9090:9090
    depends_on:
      - api-a
      - api-b

  # Use admin:admin to log in, then add http://prometheus:9090 as a data source
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./config/grafana.ini:/etc/grafana/grafana.ini
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    environment:
      - GF_PATHS_CONFIG=/etc/grafana/grafana.ini

volumes:
  pgdata:
  grafana-storage:
